pipeline {
    agent any

    environment {
        // Define email parameters
        EMAIL_RECIPIENTS = 'dasankalana3@gmail.com'
        EMAIL_SUBJECT_SUCCESS = 'Jenkins Pipeline Success Notification'
        EMAIL_SUBJECT_FAILURE = 'Jenkins Pipeline Failure Notification'
        EMAIL_BODY_SUCCESS = 'The Jenkins pipeline has successfully completed the stage: '
        EMAIL_BODY_FAILURE = 'The Jenkins pipeline has failed at the stage: '
    }

    stages {
        stage('Build') {
            steps {
                script {
                    echo 'Stage 1: Build'
                    // Build automation tool example: Maven
                    sh 'mvn clean install'
                }
            }
        }

        stage('Unit and Integration Tests') {
            steps {
                script {
                    echo 'Stage 2: Unit and Integration Tests'
                    // Unit testing example: JUnit
                    sh 'mvn test'
                    // Integration testing example: JUnit
                    sh 'mvn verify'
                }
            }
        }

        stage('Code Analysis') {
            steps {
                script {
                    echo 'Stage 3: Code Analysis'
                    // Code analysis tool example: SonarQube
                    sh 'mvn sonar:sonar'
                }
            }
        }

        stage('Security Scan') {
            steps {
                script {
                    echo 'Stage 4: Security Scan'
                    // Security scan tool example: OWASP Dependency-Check
                    sh 'dependency-check.sh --project my-project --out ./reports'
                }
            }
        }

        stage('Deploy to Staging') {
            steps {
                script {
                    echo 'Stage 5: Deploy to Staging'
                    // Deployment tool example: AWS CLI
                    sh 'aws deploy --application-name my-app --deployment-group-name staging-group'
                }
            }
        }

        stage('Integration Tests on Staging') {
            steps {
                script {
                    echo 'Stage 6: Integration Tests on Staging'
                    // Integration testing example: JUnit on staging environment
                    sh 'mvn verify -Dtest=IntegrationTest'
                }
            }
        }

        stage('Deploy to Production') {
            steps {
                script {
                    echo 'Stage 7: Deploy to Production'
                    // Deployment tool example: AWS CLI
                    sh 'aws deploy --application-name my-app --deployment-group-name production-group'
                }
            }
        }
    }

    post {
        success {
            script {
                echo 'Pipeline succeeded'
                // Send success email
                emailext (
                    subject: "${EMAIL_SUBJECT_SUCCESS} - ${currentBuild.currentResult}",
                    body: "${EMAIL_BODY_SUCCESS} ${currentBuild.currentResult}",
                    to: "${EMAIL_RECIPIENTS}"
                )
            }
        }
        failure {
            script {
                echo 'Pipeline failed'
                // Send failure email
                emailext (
                    subject: "${EMAIL_SUBJECT_FAILURE} - ${currentBuild.currentResult}",
                    body: "${EMAIL_BODY_FAILURE} ${currentBuild.currentResult}",
                    to: "${EMAIL_RECIPIENTS}"
                )
            }
        }
    }
}
