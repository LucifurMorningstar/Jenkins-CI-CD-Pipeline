pipeline {
    agent any
    
    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        
        stage('Build') {
            steps {
                echo 'Building the code using Maven...'
                bat 'mvn clean install'
            }
        }
        
        stage('Unit and Integration Tests') {
            steps {
                echo 'Running Unit and Integration Tests with JUnit...'
                bat 'mvn test'
            }
        }
        
        stage('Code Analysis') {
            steps {
                echo 'Analyzing code with SonarQube...'
                // Adjust according to your SonarQube setup
                bat 'mvn sonar:sonar'
            }
        }
        
        stage('Security Scan') {
            steps {
                echo 'Performing security scan with OWASP Dependency Check...'
                // Adjust according to your OWASP Dependency Check setup
                bat 'mvn dependency-check:check'
            }
        }
        
        stage('Deploy to Staging') {
            steps {
                echo 'Deploying to Staging Server...'
                // Add your deployment script here
            }
        }
        
        stage('Integration Tests on Staging') {
            steps {
                echo 'Running Integration Tests on Staging...'
                // Add your integration test script here
            }
        }
        
        stage('Deploy to Production') {
            steps {
                echo 'Deploying to Production Server...'
                // Add your production deployment script here
            }
        }
        
        stage('List Workspace Files') {
            steps {
                echo 'Listing workspace files...'
                bat 'dir'
            }
        }
    }
    
    post {
        always {
            archiveArtifacts artifacts: '**/*.jar', allowEmptyArchive: true
            echo 'Archiving artifacts'
        }
        
        failure {
            emailext(
                to: 'dasankalana3@gmail.com',
                subject: 'Jenkins Build Failed: ${env.JOB_NAME} #${env.BUILD_NUMBER}',
                body: "The build failed. Check console output at ${env.BUILD_URL}",
                attachLog: true
            )
        }
        
        success {
            emailext(
                to: 'dasankalana3@gmail.com',
                subject: 'Jenkins Build Success: ${env.JOB_NAME} #${env.BUILD_NUMBER}',
                body: "The build was successful. Check console output at ${env.BUILD_URL}",
                attachLog: true
            )
        }
    }
}
