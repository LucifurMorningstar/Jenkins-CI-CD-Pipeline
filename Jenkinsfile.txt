pipeline {
    agent any
    
    stages {
        stage('Build') {
            steps {
                echo 'Building the project...'
                // Example: sh 'mvn clean package'
            }
        }
        stage('Unit and Integration Tests') {
            steps {
                echo 'Running unit and integration tests...'
                // Example: sh 'mvn test'
            }
        }
        stage('Code Analysis') {
            steps {
                echo 'Performing code analysis...'
                // Example: sh 'sonar-scanner'
            }
        }
        stage('Security Scan') {
            steps {
                echo 'Running security scan...'
                // Example: sh 'npm audit'
            }
        }
        stage('Deploy to Staging') {
            steps {
                echo 'Deploying to staging server...'
                // Example: sh 'scp target/app.jar user@staging-server:/path/to/deploy'
            }
        }
        stage('Integration Tests on Staging') {
            steps {
                echo 'Running integration tests on staging...'
                // Example: sh 'curl http://staging-server/health-check'
            }
        }
        stage('Deploy to Production') {
            steps {
                echo 'Deploying to production server...'
                // Example: sh 'scp target/app.jar user@production-server:/path/to/deploy'
            }
        }
    }
    
    post {
        always {
            // Archive the console log to make it accessible for reading
            archiveArtifacts artifacts: '**/target/*.log', allowEmptyArchive: true
            
            // Write the Jenkins console log to a file
            script {
                def logContent = currentBuild.rawBuild.getLog(100).join('\n')
                writeFile(file: 'pipeline-log.txt', text: logContent)
            }
        }

        success {
            emailext attachmentsPattern: 'pipeline-log.txt',
                     attachLog = true,
                     to: 'dasankalana3@gmail.com',
                     subject: "Pipeline Successful: ${currentBuild.fullDisplayName}",
                     body: "The Jenkins pipeline has completed successfully. Please find the attached log file."
        }
        failure {
            emailext attachmentsPattern: 'pipeline-log.txt',
                     attachLog = true,
                     to: 'dasankalana3@gmail.com',
                     subject: "Pipeline Failed: ${currentBuild.fullDisplayName}",
                     body: "The Jenkins pipeline has failed. Please find the attached log file for details."
        }
    }
}
